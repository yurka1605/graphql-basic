type Track {
  id: ID!
  title: String!
  albums: [Album]
  bands: [Band]
  duration: Int
  released: Int
  genres: [Genre]
}

input CreateTrackInput {
  title: String!
  albumId: ID!
  duration: Int!
  genresIds: [ID]!
  released: Int!
  bandsIds: [ID]
}

input UpdateTrackInput {
  title: String
  albumId: ID
  duration: Int
  genresIds: [ID]
  released: Int
  bandsIds: [ID]
}

type PaginationTracks {
  items: [Track]
  offset: String
  limit: String
  total: String
}

type Query {
  track(id: ID!): Track
  tracks(input: PaginationInput): PaginationTracks
}

type Mutation {
  createTrack(input: CreateTrackInput!): Track
  updateTrack(id: ID!, input: UpdateTrackInput!): Track
  deleteTrack(id: ID!): DeleteResponse
}
